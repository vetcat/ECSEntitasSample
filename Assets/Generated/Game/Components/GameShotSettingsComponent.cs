//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity shotSettingsEntity { get { return GetGroup(GameMatcher.ShotSettings).GetSingleEntity(); } }
    public ShotSettingsComponent shotSettings { get { return shotSettingsEntity.shotSettings; } }
    public bool hasShotSettings { get { return shotSettingsEntity != null; } }

    public GameEntity SetShotSettings(Game.Settings.ShotSettings newValue) {
        if (hasShotSettings) {
            throw new Entitas.EntitasException("Could not set ShotSettings!\n" + this + " already has an entity with ShotSettingsComponent!",
                "You should check if the context already has a shotSettingsEntity before setting it or use context.ReplaceShotSettings().");
        }
        var entity = CreateEntity();
        entity.AddShotSettings(newValue);
        return entity;
    }

    public void ReplaceShotSettings(Game.Settings.ShotSettings newValue) {
        var entity = shotSettingsEntity;
        if (entity == null) {
            entity = SetShotSettings(newValue);
        } else {
            entity.ReplaceShotSettings(newValue);
        }
    }

    public void RemoveShotSettings() {
        shotSettingsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ShotSettingsComponent shotSettings { get { return (ShotSettingsComponent)GetComponent(GameComponentsLookup.ShotSettings); } }
    public bool hasShotSettings { get { return HasComponent(GameComponentsLookup.ShotSettings); } }

    public void AddShotSettings(Game.Settings.ShotSettings newValue) {
        var index = GameComponentsLookup.ShotSettings;
        var component = CreateComponent<ShotSettingsComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceShotSettings(Game.Settings.ShotSettings newValue) {
        var index = GameComponentsLookup.ShotSettings;
        var component = CreateComponent<ShotSettingsComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveShotSettings() {
        RemoveComponent(GameComponentsLookup.ShotSettings);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherShotSettings;

    public static Entitas.IMatcher<GameEntity> ShotSettings {
        get {
            if (_matcherShotSettings == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ShotSettings);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherShotSettings = matcher;
            }

            return _matcherShotSettings;
        }
    }
}
