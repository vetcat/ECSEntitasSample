//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.Components.ShootingComponent shooting { get { return (Game.Components.ShootingComponent)GetComponent(GameComponentsLookup.Shooting); } }
    public bool hasShooting { get { return HasComponent(GameComponentsLookup.Shooting); } }

    public void AddShooting(float newDurationTime, bool newIsFirstTimeShot) {
        var index = GameComponentsLookup.Shooting;
        var component = CreateComponent<Game.Components.ShootingComponent>(index);
        component.DurationTime = newDurationTime;
        component.IsFirstTimeShot = newIsFirstTimeShot;
        AddComponent(index, component);
    }

    public void ReplaceShooting(float newDurationTime, bool newIsFirstTimeShot) {
        var index = GameComponentsLookup.Shooting;
        var component = CreateComponent<Game.Components.ShootingComponent>(index);
        component.DurationTime = newDurationTime;
        component.IsFirstTimeShot = newIsFirstTimeShot;
        ReplaceComponent(index, component);
    }

    public void RemoveShooting() {
        RemoveComponent(GameComponentsLookup.Shooting);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherShooting;

    public static Entitas.IMatcher<GameEntity> Shooting {
        get {
            if (_matcherShooting == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Shooting);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherShooting = matcher;
            }

            return _matcherShooting;
        }
    }
}
